[{"/home/norbu/projects/progress/frontend/src/index.js":"1","/home/norbu/projects/progress/frontend/src/reportWebVitals.js":"2","/home/norbu/projects/progress/frontend/src/App.js":"3","/home/norbu/projects/progress/frontend/src/themes.js":"4","/home/norbu/projects/progress/frontend/src/pages/List.js":"5","/home/norbu/projects/progress/frontend/src/components/BaseRoute.js":"6","/home/norbu/projects/progress/frontend/src/pages/Task.js":"7","/home/norbu/projects/progress/frontend/src/helpers/parseError.js":"8","/home/norbu/projects/progress/frontend/src/components/Navbar.js":"9","/home/norbu/projects/progress/frontend/src/pages/Auth.js":"10","/home/norbu/projects/progress/frontend/src/pages/Home.js":"11","/home/norbu/projects/progress/frontend/src/components/ListDrawer.js":"12","/home/norbu/projects/progress/frontend/src/components/SignupForm.js":"13","/home/norbu/projects/progress/frontend/src/components/CreateList.js":"14","/home/norbu/projects/progress/frontend/src/components/LoginForm.js":"15"},{"size":644,"mtime":1611552040824,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1611552040824,"results":"18","hashOfConfig":"17"},{"size":2860,"mtime":1611552040824,"results":"19","hashOfConfig":"17"},{"size":320,"mtime":1611553764342,"results":"20","hashOfConfig":"17"},{"size":271,"mtime":1611552040824,"results":"21","hashOfConfig":"17"},{"size":841,"mtime":1611552040824,"results":"22","hashOfConfig":"17"},{"size":178,"mtime":1611552040824,"results":"23","hashOfConfig":"17"},{"size":263,"mtime":1611552040824,"results":"24","hashOfConfig":"17"},{"size":3573,"mtime":1611553456767,"results":"25","hashOfConfig":"17"},{"size":1396,"mtime":1611552040824,"results":"26","hashOfConfig":"17"},{"size":378,"mtime":1611552040824,"results":"27","hashOfConfig":"17"},{"size":1487,"mtime":1611552040824,"results":"28","hashOfConfig":"17"},{"size":2784,"mtime":1611552040824,"results":"29","hashOfConfig":"17"},{"size":2611,"mtime":1611552040824,"results":"30","hashOfConfig":"17"},{"size":2370,"mtime":1611552040824,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"v5qe0e",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/home/norbu/projects/progress/frontend/src/index.js",[],["65","66"],"/home/norbu/projects/progress/frontend/src/reportWebVitals.js",[],"/home/norbu/projects/progress/frontend/src/App.js",["67"],"import React, { useState, useEffect } from 'react'\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport axios from 'axios'\n\nimport { ThemeProvider } from '@material-ui/core'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\nimport { useSnackbar } from 'notistack';\n\nimport BaseRoute from './components/BaseRoute'\nimport List from './pages/List'\nimport Task from './pages/Task'\nimport Navbar from './components/Navbar'\n\nimport parseError from './helpers/parseError'\n\nimport { light, dark } from './themes'\n\nfunction App() {\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [authCheckFinished, setAuthCheckFinished] = useState(false)\n  const [user, setUser] = useState({})\n  const [lists, setLists] = useState([])\n  const [darkMode, setDarkMode] = useState(localStorage.getItem('darkMode') === 'true')\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const appliedTheme = createMuiTheme(darkMode ? dark : light)\n\n  const setToLoggedIn = (user) => {\n    setIsLoggedIn(true)\n    setUser(user)\n    fetchLists()\n  }\n\n  const setToLoggedOut = () => {\n    setIsLoggedIn(false)\n    setUser({})\n    setLists([])\n  }\n\n  // Check authentication status\n  useEffect(() => {\n    axios.get(process.env.REACT_APP_API_URL + 'auth/status', {\n      withCredentials: true\n    })\n    .then(res => {\n      if (res.data.signedIn) {\n        enqueueSnackbar(res.data.msg, {\n          variant: 'success'\n        })\n        setToLoggedIn(res.data.user)\n      } else {\n        setToLoggedOut()\n      }\n      setAuthCheckFinished(true)\n    })\n    .catch(err => {\n      enqueueSnackbar(parseError(err), {\n        variant: 'error'\n      })\n      setToLoggedOut()\n      setAuthCheckFinished(true)\n    })\n  }, [enqueueSnackbar])\n\n  const fetchLists = () => {\n    axios.get(process.env.REACT_APP_API_URL + 'list', {\n      withCredentials: true\n    })\n    .then(res => {\n      setLists(res.data.lists)\n    })\n    .catch(err => {\n      enqueueSnackbar(parseError(err), {\n        variant: 'error'\n      })\n    })\n  }\n\n  return (\n    <ThemeProvider theme={appliedTheme}>\n      <CssBaseline />\n      <Router>\n        {isLoggedIn && \n          <Navbar \n            onLogout={setToLoggedOut} \n            darkMode={darkMode} \n            setDarkMode={setDarkMode}\n            lists={lists}\n          />\n        }\n        <Switch>\n          <>\n            <BaseRoute \n              authCheckFinished={authCheckFinished} \n              isLoggedIn={isLoggedIn}\n              onAuthenticated={setToLoggedIn}\n              user={user}\n              lists={lists}/>\n            <Route path=\"/list/:listId\" component={List}></Route>\n            <Route path=\"/task/:taskId\" component={Task}></Route>\n          </>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","/home/norbu/projects/progress/frontend/src/themes.js",[],"/home/norbu/projects/progress/frontend/src/pages/List.js",[],"/home/norbu/projects/progress/frontend/src/components/BaseRoute.js",[],"/home/norbu/projects/progress/frontend/src/pages/Task.js",[],"/home/norbu/projects/progress/frontend/src/helpers/parseError.js",[],"/home/norbu/projects/progress/frontend/src/components/Navbar.js",[],"/home/norbu/projects/progress/frontend/src/pages/Auth.js",[],"/home/norbu/projects/progress/frontend/src/pages/Home.js",[],"/home/norbu/projects/progress/frontend/src/components/ListDrawer.js",[],"/home/norbu/projects/progress/frontend/src/components/SignupForm.js",[],"/home/norbu/projects/progress/frontend/src/components/CreateList.js",[],"/home/norbu/projects/progress/frontend/src/components/LoginForm.js",[],["68","69"],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":71,"column":6,"nodeType":"76","endLine":71,"endColumn":23,"suggestions":"77"},{"ruleId":"70","replacedBy":"78"},{"ruleId":"72","replacedBy":"79"},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setToLoggedIn'. Either include it or remove the dependency array.","ArrayExpression",["82"],["80"],["81"],"no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [enqueueSnackbar, setToLoggedIn]",{"range":"85","text":"86"},[1789,1806],"[enqueueSnackbar, setToLoggedIn]"]